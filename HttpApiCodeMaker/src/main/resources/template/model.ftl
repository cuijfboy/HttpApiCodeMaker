<#assign class = root>
<#assign model = root>
<#assign modelHeader = model.transientFieldMap>
<#assign modelBody = model.ordinaryFieldMap>
/******************************************************************************

            This file is automatically generated by HttpApiCodeMaker.
            Do not modify this file -- YOUR CHANGES WILL BE ERASED!

******************************** CONFIGURATION ********************************

"${model.name}": ${model.configuration}

******************************************************************************/

package ${class.packageName};

<#list class.importSet as import>
import ${import};
</#list>

<#if class.parent??>
    <#if class.parent == "HttpResponse">
import name.ilab.http.HttpResponse;
import name.ilab.http.HttpMethod;
import name.ilab.http.ResponseType;
import java.util.Map;
    </#if>
</#if>

import name.ilab.http.HttpApiHelper;

public class ${class.name} <#if class.parent??>extends ${class.parent} </#if>{

    // header
<#list modelHeader?keys as name>
    <#assign type = modelHeader[name]>
    public transient ${type} ${name};
</#list>

    // body
<#list modelBody?keys as name>
    <#assign type = modelBody[name]>
    public ${type} ${name};
</#list>

<#if class.parent??>
    <#if class.parent == "HttpResponse">
    public ${class.name}(HttpResponse httpResponse) {
        super(httpResponse);
    }

    public ${class.name}(ResponseType responseType, int statusCode, HttpMethod method, String url,
            Map<String, String> header) {
        super(responseType, statusCode, method, url, header);
    }

    </#if>
</#if>
    @Override
    public String toString() {
        return HttpApiHelper.toJson(this);
    }

    public static ${class.name} valueOf(String valueString) {
        return HttpApiHelper.fromJson(valueString, ${class.name}.class);
    }

}


